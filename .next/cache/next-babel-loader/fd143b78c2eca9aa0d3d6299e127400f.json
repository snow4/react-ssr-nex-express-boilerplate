{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nimport initState from \"./initialState\";\n\nfunction configureStore(initialState = initState) {\n  const middleware = [thunk];\n\n  if (false) {\n    middleware.push(createLogger({\n      collapsed: true\n    }));\n  }\n\n  return createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n}\n\nexport default configureStore;","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/example/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","createLogger","thunk","rootReducer","initState","configureStore","initialState","middleware","push","collapsed"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,SAASC,cAAT,CAAwBC,YAAY,GAAGF,SAAvC,EAAkD;AAChD,QAAMG,UAAU,GAAG,CAACL,KAAD,CAAnB;;AACA,aAAmC;AACjCK,IAAAA,UAAU,CAACC,IAAX,CAAgBP,YAAY,CAAC;AAAEQ,MAAAA,SAAS,EAAE;AAAb,KAAD,CAA5B;AACD;;AACD,SAAOX,WAAW,CAChBK,WADgB,EAEhBG,YAFgB,EAGhBN,mBAAmB,CAACD,eAAe,CAAC,GAAGQ,UAAJ,CAAhB,CAHH,CAAlB;AAKD;;AACD,eAAeF,cAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nimport initState from \"./initialState\";\n\nfunction configureStore(initialState = initState) {\n  const middleware = [thunk];\n  if (typeof window !== \"undefined\") {\n    middleware.push(createLogger({ collapsed: true }));\n  }\n  return createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n  );\n}\nexport default configureStore;\n"]},"metadata":{},"sourceType":"module"}