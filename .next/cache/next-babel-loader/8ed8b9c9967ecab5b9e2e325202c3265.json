{"ast":null,"code":"var __jsx = React.createElement;\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport withRedux, { createWrapper, wrapper } from \"next-redux-wrapper\";\nimport Store from \"../redux/store\";\nimport Layout from \"../component/Layout/index\";\nconst store = Store();\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {}; // const pageProps = Component.getInitialProps\n    //   ? await Component.getInitialProps(ctx)\n    //   : {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({\n        ctx\n      });\n    } //Anything returned here can be accessed by the client\n\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/example/pages/_app.js"],"names":["App","Provider","React","withRedux","createWrapper","wrapper","Store","Layout","store","MyApp","getInitialProps","Component","ctx","pageProps","render","props","makeStore"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,aAApB,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AAEA,MAAMC,KAAK,GAAGF,KAAK,EAAnB;;AACA,MAAMG,KAAN,SAAoBT,GAApB,CAAwB;AACtB,eAAaU,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB,CAD+C,CAE/C;AACA;AACA;;AACA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0B;AAAEE,QAAAA;AAAF,OAA1B,CAAlB;AACD,KAP8C,CAQ/C;;;AACA,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKE,KAAtC;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEP;AAAjB,OACE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeK,SAAf,CADF,CADF,CADF;AAOD;;AAvBqB,C,CA0BxB;;;AACA,MAAMG,SAAS,GAAG,MAAMR,KAAxB,C,CAEA;;;AACA,eAAeL,SAAS,CAACa,SAAD,CAAT,CAAqBP,KAArB,CAAf","sourcesContent":["import App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport withRedux, { createWrapper, wrapper } from \"next-redux-wrapper\";\nimport Store from \"../redux/store\";\nimport Layout from \"../component/Layout/index\";\n\nconst store = Store();\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    // const pageProps = Component.getInitialProps\n    //   ? await Component.getInitialProps(ctx)\n    //   : {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    //Anything returned here can be accessed by the client\n    return { pageProps };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const { Component, pageProps } = this.props;\n    return (\n      <Provider store={store}>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}