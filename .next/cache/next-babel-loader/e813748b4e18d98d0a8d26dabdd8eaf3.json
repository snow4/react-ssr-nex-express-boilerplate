{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport withRedux, { createWrapper, wrapper } from \"next-redux-wrapper\";\nimport Store from \"../redux/store\";\nimport Layout from \"../components/Layout/index\";\nvar store = Store();\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      console.log(\"props in main\", this.props);\n      return __jsx(Provider, {\n        store: store\n      }, __jsx(Layout, null, __jsx(Component, pageProps)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {}; // const pageProps = Component.getInitialProps\n                //   ? await Component.getInitialProps(ctx)\n                //   : {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps({\n                  ctx: ctx\n                });\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App); //makeStore function that returns a new store for every request\n\n\nvar makeStore = function makeStore() {\n  return store;\n}; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/example/pages/_app.js"],"names":["App","Provider","React","withRedux","createWrapper","wrapper","Store","Layout","store","MyApp","props","Component","pageProps","console","log","ctx","getInitialProps","makeStore"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,IAAoBC,aAApB,EAAmCC,OAAnC,QAAkD,oBAAlD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,IAAMC,KAAK,GAAGF,KAAK,EAAnB;;IACMG,K;;;;;;;;;;;;;6BAaK;AACP;AADO,wBAE0B,KAAKC,KAF/B;AAAA,UAECC,SAFD,eAECA,SAFD;AAAA,UAEYC,SAFZ,eAEYA,SAFZ;AAGPC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKJ,KAAlC;AACA,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEF;AAAjB,SACE,MAAC,MAAD,QACE,MAAC,SAAD,EAAeI,SAAf,CADF,CADF,CADF;AAOD;;;;;;;;;;AAvB8BD,gBAAAA,S,QAAAA,S,EAAWI,G,QAAAA,G;AACpCH,gBAAAA,S,GAAY,E,EAChB;AACA;AACA;;qBACID,SAAS,CAACK,e;;;;;;uBACML,SAAS,CAACK,eAAV,CAA0B;AAAED,kBAAAA,GAAG,EAAHA;AAAF,iBAA1B,C;;;AAAlBH,gBAAAA,S;;;iDAGK;AAAEA,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAVSZ,G,GA2BpB;;;AACA,IAAMiB,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMT,KAAN;AAAA,CAAlB,C,CAEA;;;AACA,eAAeL,SAAS,CAACc,SAAD,CAAT,CAAqBR,KAArB,CAAf","sourcesContent":["import App from \"next/app\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport withRedux, { createWrapper, wrapper } from \"next-redux-wrapper\";\nimport Store from \"../redux/store\";\nimport Layout from \"../components/Layout/index\";\n\nconst store = Store();\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    // const pageProps = Component.getInitialProps\n    //   ? await Component.getInitialProps(ctx)\n    //   : {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps({ ctx });\n    }\n    //Anything returned here can be accessed by the client\n    return { pageProps };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const { Component, pageProps } = this.props;\n    console.log(\"props in main\", this.props);\n    return (\n      <Provider store={store}>\n        <Layout>\n          <Component {...pageProps}  />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\n\n//withRedux wrapper that passes the store to the App Component\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}